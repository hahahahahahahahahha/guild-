import { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, PermissionsBitField } from 'discord.js';
import { checkAdmin } from '../../utils/permissions.js';
import { createLoadingEmbed, createErrorEmbed } from '../../utils/embeds.js';

export const customId = 'confirm_reset_role_permissions';

export async function execute(interaction) {
  // Check if the user has administrator permissions
  if (!await checkAdmin(interaction)) return;

  // Get the role ID from the custom ID
  const roleId = interaction.customId.split(':')[1];
  
  // Send a loading message
  await interaction.update({
    embeds: [createLoadingEmbed('–°–±—Ä–æ—Å –ø—Ä–∞–≤ —Ä–æ–ª–∏...')],
    components: [],
    ephemeral: true
  });
  
  try {
    // Fetch the role
    const role = await interaction.guild.roles.fetch(roleId);
    
    if (!role) {
      return await interaction.editReply({
        embeds: [createErrorEmbed('–û—à–∏–±–∫–∞', '–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.')],
        components: [
          new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId('view_roles')
                .setLabel('–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ä–æ–ª–µ–π')
                .setStyle(ButtonStyle.Secondary)
                .setEmoji('‚óÄÔ∏è')
            )
        ],
        ephemeral: true
      });
    }
    
    // Reset the role permissions to default (0n)
    await role.setPermissions(0n, `–°–±—Ä–æ—Å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ${interaction.user.tag}`);
    
    // Create a success embed
    const successEmbed = new EmbedBuilder()
      .setTitle('‚úÖ –ü—Ä–∞–≤–∞ —Ä–æ–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã')
      .setColor('#2ecc71')
      .setDescription(`–í—Å–µ –ø—Ä–∞–≤–∞ —Ä–æ–ª–∏ **${role.name}** —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã –¥–æ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.`)
      .setTimestamp();
    
    // Create buttons for further actions
    const row1 = new ActionRowBuilder()
      .addComponents(
        new ButtonBuilder()
          .setCustomId(`manage_role_permissions:${roleId}`)
          .setLabel('–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–∞–≤–∞–º–∏')
          .setStyle(ButtonStyle.Primary)
          .setEmoji('üîí')
      );
    
    const row2 = new ActionRowBuilder()
      .addComponents(
        new ButtonBuilder()
          .setCustomId(`manage_role:${roleId}`)
          .setLabel('–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–æ–ª—å—é')
          .setStyle(ButtonStyle.Secondary)
          .setEmoji('‚óÄÔ∏è')
      );
    
    // Update the reply with the success message
    await interaction.editReply({
      embeds: [successEmbed],
      components: [row1, row2],
      ephemeral: true
    });
  } catch (error) {
    console.error('Error in confirmResetRolePermissions:', error);
    
    // Create an error embed
    const errorEmbed = createErrorEmbed(
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–∞–≤ —Ä–æ–ª–∏',
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}\n` +
      '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –±–æ—Ç–∞ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
    );
    
    // Create a button to go back to role management
    const row = new ActionRowBuilder()
      .addComponents(
        new ButtonBuilder()
          .setCustomId(`manage_role_permissions:${roleId}`)
          .setLabel('–ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–∞–≤–∞–º–∏')
          .setStyle(ButtonStyle.Secondary)
          .setEmoji('‚óÄÔ∏è')
      );
    
    // Update the reply with the error message
    await interaction.editReply({
      embeds: [errorEmbed],
      components: [row],
      ephemeral: true
    });
  }
}